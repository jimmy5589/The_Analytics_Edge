a<-[1,2,3,4]
a<-c(1,2,3,4)
mean(a)
license()
RShowDoc("LGPL-3")
a[1]
a>3
as.numeric(a>3)
install.packages("zoo")
library(zoo)
FluTrain=read.csv('FluTrain.csv')
setwd("/opt/oracle/admin/The_Analytics_Edge/Datasets")
FluTrain=read.csv('FluTrain.csv')
FluTrend1=lm(log(ILI) ~ Queries, data=FluTrain)
FluTest=read.csv("FluTest.csv")
PredTest1 = exp(predict(FluTrend1, newdata=FluTest))
ILILag2 = lag(zoo(FluTrain$ILI), -2, na.pad=TRUE)
summary(ILILa2)
summary(ILILag2)
FluTrain$ILILag2 = coredata(ILILag2)
summary(FluTrain)
plot(log(FluTrain$ILI),log(FluTrain$ILILag2))
plot(log(FluTrain$ILILag2), log(FluTrain$ILI))
plot(log(FluTrain$ILI),log(FluTrain$ILILag2))
plot(log(FluTrain$ILILag2), log(FluTrain$ILI))
FluTrend2=lm(log(ILILag2) ~ Queries, data=FluTrain)
FluTrend2=lm(log(ILI) ~ Queries + log(ILILag2) , data=FluTrain)
summary(FluTrend2)
summary(Trend1)
summary(FluTrend1)
summary(FluTrend2)
ILILag2 = lag(zoo(FluTest$ILI), -2, na.pad=TRUE)
FluTest$ILILag2=ILILag2
summary(FluTest)
FluTest$ILILag2=coredata(ILILag2)
summary(FluTest)
FluTest$ILILag2[2]=FluTrain$ILI[nrow(FluTrain)]
FluTest$ILILag2[1]=FluTrain$ILI[nrow(FluTrain)-1]
summary(FluTest)
FluTest$ILILag2[1]
FluTest$ILILag2[2]
FluTrain$ILI[nrow(FluTrain)]
FluTrain$ILI[nrow(FluTrain)-1]
tail FluTrain
tail(FluTrain)
PredTest2 = exp(predict(FluTrend2, newdata=FluTest))
PredTest2
SSE=sum((Predtest2-FluTest$ILI)^2)
SSE=sum((PredTest2-FluTest$ILI)^2)
RMSE=sqrt(SSE/nrow(FluTest))
SSE
RMSE
SSE1=sum((PredTest1-FluTest$ILI)^2)
RMSE1=sqrt(SSE/nrow(FluTest))
RMSE1=sqrt(SSE1/nrow(FluTest))
rm(SSE, RMSE)
SSE2=sum((PredTest2-FluTest$ILI)^2)
RMSE2=sqrt(SSE2/nrow(FluTest))
RMSE2
SST1=sum(mean(FluTrain$ILI)-FluTest1$ILI)^2)
SST1=sum((mean(FluTrain$ILI)-FluTest1$ILI)^2)
SST1=sum((mean(FluTrain$ILI)-FluTest$ILI)^2)
R2_1=1-SSE1/SST1
R2_2=1-SSE2/SST1
c(R2_1, R2_2)
version
